/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-07-16 18:28:29 UTC)
 * on 2015-07-26 at 06:27:20 UTC 
 * Modify at your own risk.
 */

package com.example.lisacampbell.backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://sharpshooter-1017.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addPlayer".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddPlayer#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param regId
   * @param byteString
   * @return the request
   */
  public AddPlayer addPlayer(java.lang.String name, java.lang.String regId, java.lang.String byteString) throws java.io.IOException {
    AddPlayer result = new AddPlayer(name, regId, byteString);
    initialize(result);
    return result;
  }

  public class AddPlayer extends MyApiRequest<com.example.lisacampbell.backend.myApi.model.Player> {

    private static final String REST_PATH = "addPlayer/{name}/{regId}/{byteString}";

    /**
     * Create a request for the method "addPlayer".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddPlayer#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddPlayer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param regId
     * @param byteString
     * @since 1.13
     */
    protected AddPlayer(java.lang.String name, java.lang.String regId, java.lang.String byteString) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.lisacampbell.backend.myApi.model.Player.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
      this.byteString = com.google.api.client.util.Preconditions.checkNotNull(byteString, "Required parameter byteString must be specified.");
    }

    @Override
    public AddPlayer setAlt(java.lang.String alt) {
      return (AddPlayer) super.setAlt(alt);
    }

    @Override
    public AddPlayer setFields(java.lang.String fields) {
      return (AddPlayer) super.setFields(fields);
    }

    @Override
    public AddPlayer setKey(java.lang.String key) {
      return (AddPlayer) super.setKey(key);
    }

    @Override
    public AddPlayer setOauthToken(java.lang.String oauthToken) {
      return (AddPlayer) super.setOauthToken(oauthToken);
    }

    @Override
    public AddPlayer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddPlayer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddPlayer setQuotaUser(java.lang.String quotaUser) {
      return (AddPlayer) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddPlayer setUserIp(java.lang.String userIp) {
      return (AddPlayer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public AddPlayer setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String regId;

    /**

     */
    public java.lang.String getRegId() {
      return regId;
    }

    public AddPlayer setRegId(java.lang.String regId) {
      this.regId = regId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String byteString;

    /**

     */
    public java.lang.String getByteString() {
      return byteString;
    }

    public AddPlayer setByteString(java.lang.String byteString) {
      this.byteString = byteString;
      return this;
    }

    @Override
    public AddPlayer set(String parameterName, Object value) {
      return (AddPlayer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "attemptKill".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AttemptKill#execute()} method to invoke the remote operation.
   *
   * @param killerId
   * @param killNumber
   * @return the request
   */
  public AttemptKill attemptKill(java.lang.String killerId, java.lang.String killNumber) throws java.io.IOException {
    AttemptKill result = new AttemptKill(killerId, killNumber);
    initialize(result);
    return result;
  }

  public class AttemptKill extends MyApiRequest<com.example.lisacampbell.backend.myApi.model.BooleanResponse> {

    private static final String REST_PATH = "attemptKill/{killerId}/{killNumber}";

    /**
     * Create a request for the method "attemptKill".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AttemptKill#execute()} method to invoke the remote operation. <p>
     * {@link
     * AttemptKill#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param killerId
     * @param killNumber
     * @since 1.13
     */
    protected AttemptKill(java.lang.String killerId, java.lang.String killNumber) {
      super(MyApi.this, "DELETE", REST_PATH, null, com.example.lisacampbell.backend.myApi.model.BooleanResponse.class);
      this.killerId = com.google.api.client.util.Preconditions.checkNotNull(killerId, "Required parameter killerId must be specified.");
      this.killNumber = com.google.api.client.util.Preconditions.checkNotNull(killNumber, "Required parameter killNumber must be specified.");
    }

    @Override
    public AttemptKill setAlt(java.lang.String alt) {
      return (AttemptKill) super.setAlt(alt);
    }

    @Override
    public AttemptKill setFields(java.lang.String fields) {
      return (AttemptKill) super.setFields(fields);
    }

    @Override
    public AttemptKill setKey(java.lang.String key) {
      return (AttemptKill) super.setKey(key);
    }

    @Override
    public AttemptKill setOauthToken(java.lang.String oauthToken) {
      return (AttemptKill) super.setOauthToken(oauthToken);
    }

    @Override
    public AttemptKill setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AttemptKill) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AttemptKill setQuotaUser(java.lang.String quotaUser) {
      return (AttemptKill) super.setQuotaUser(quotaUser);
    }

    @Override
    public AttemptKill setUserIp(java.lang.String userIp) {
      return (AttemptKill) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String killerId;

    /**

     */
    public java.lang.String getKillerId() {
      return killerId;
    }

    public AttemptKill setKillerId(java.lang.String killerId) {
      this.killerId = killerId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String killNumber;

    /**

     */
    public java.lang.String getKillNumber() {
      return killNumber;
    }

    public AttemptKill setKillNumber(java.lang.String killNumber) {
      this.killNumber = killNumber;
      return this;
    }

    @Override
    public AttemptKill set(String parameterName, Object value) {
      return (AttemptKill) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPlayers".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetPlayers#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetPlayers getPlayers() throws java.io.IOException {
    GetPlayers result = new GetPlayers();
    initialize(result);
    return result;
  }

  public class GetPlayers extends MyApiRequest<com.example.lisacampbell.backend.myApi.model.PlayerResponseCollection> {

    private static final String REST_PATH = "playerresponsecollection";

    /**
     * Create a request for the method "getPlayers".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetPlayers#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetPlayers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetPlayers() {
      super(MyApi.this, "GET", REST_PATH, null, com.example.lisacampbell.backend.myApi.model.PlayerResponseCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPlayers setAlt(java.lang.String alt) {
      return (GetPlayers) super.setAlt(alt);
    }

    @Override
    public GetPlayers setFields(java.lang.String fields) {
      return (GetPlayers) super.setFields(fields);
    }

    @Override
    public GetPlayers setKey(java.lang.String key) {
      return (GetPlayers) super.setKey(key);
    }

    @Override
    public GetPlayers setOauthToken(java.lang.String oauthToken) {
      return (GetPlayers) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPlayers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPlayers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPlayers setQuotaUser(java.lang.String quotaUser) {
      return (GetPlayers) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPlayers setUserIp(java.lang.String userIp) {
      return (GetPlayers) super.setUserIp(userIp);
    }

    @Override
    public GetPlayers set(String parameterName, Object value) {
      return (GetPlayers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTargetFor".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link GetTargetFor#execute()} method to invoke the remote operation.
   *
   * @param playerId
   * @return the request
   */
  public GetTargetFor getTargetFor(java.lang.String playerId) throws java.io.IOException {
    GetTargetFor result = new GetTargetFor(playerId);
    initialize(result);
    return result;
  }

  public class GetTargetFor extends MyApiRequest<com.example.lisacampbell.backend.myApi.model.PlayerResponse> {

    private static final String REST_PATH = "playerresponse/{playerId}";

    /**
     * Create a request for the method "getTargetFor".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link GetTargetFor#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetTargetFor#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param playerId
     * @since 1.13
     */
    protected GetTargetFor(java.lang.String playerId) {
      super(MyApi.this, "GET", REST_PATH, null, com.example.lisacampbell.backend.myApi.model.PlayerResponse.class);
      this.playerId = com.google.api.client.util.Preconditions.checkNotNull(playerId, "Required parameter playerId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTargetFor setAlt(java.lang.String alt) {
      return (GetTargetFor) super.setAlt(alt);
    }

    @Override
    public GetTargetFor setFields(java.lang.String fields) {
      return (GetTargetFor) super.setFields(fields);
    }

    @Override
    public GetTargetFor setKey(java.lang.String key) {
      return (GetTargetFor) super.setKey(key);
    }

    @Override
    public GetTargetFor setOauthToken(java.lang.String oauthToken) {
      return (GetTargetFor) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTargetFor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTargetFor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTargetFor setQuotaUser(java.lang.String quotaUser) {
      return (GetTargetFor) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTargetFor setUserIp(java.lang.String userIp) {
      return (GetTargetFor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String playerId;

    /**

     */
    public java.lang.String getPlayerId() {
      return playerId;
    }

    public GetTargetFor setPlayerId(java.lang.String playerId) {
      this.playerId = playerId;
      return this;
    }

    @Override
    public GetTargetFor set(String parameterName, Object value) {
      return (GetTargetFor) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "restartGame".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RestartGame#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public RestartGame restartGame() throws java.io.IOException {
    RestartGame result = new RestartGame();
    initialize(result);
    return result;
  }

  public class RestartGame extends MyApiRequest<com.example.lisacampbell.backend.myApi.model.Game> {

    private static final String REST_PATH = "restartGame";

    /**
     * Create a request for the method "restartGame".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RestartGame#execute()} method to invoke the remote operation. <p>
     * {@link
     * RestartGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected RestartGame() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.lisacampbell.backend.myApi.model.Game.class);
    }

    @Override
    public RestartGame setAlt(java.lang.String alt) {
      return (RestartGame) super.setAlt(alt);
    }

    @Override
    public RestartGame setFields(java.lang.String fields) {
      return (RestartGame) super.setFields(fields);
    }

    @Override
    public RestartGame setKey(java.lang.String key) {
      return (RestartGame) super.setKey(key);
    }

    @Override
    public RestartGame setOauthToken(java.lang.String oauthToken) {
      return (RestartGame) super.setOauthToken(oauthToken);
    }

    @Override
    public RestartGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RestartGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RestartGame setQuotaUser(java.lang.String quotaUser) {
      return (RestartGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public RestartGame setUserIp(java.lang.String userIp) {
      return (RestartGame) super.setUserIp(userIp);
    }

    @Override
    public RestartGame set(String parameterName, Object value) {
      return (RestartGame) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "startGame".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link StartGame#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public StartGame startGame() throws java.io.IOException {
    StartGame result = new StartGame();
    initialize(result);
    return result;
  }

  public class StartGame extends MyApiRequest<com.example.lisacampbell.backend.myApi.model.BooleanResponse> {

    private static final String REST_PATH = "startGame";

    /**
     * Create a request for the method "startGame".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link StartGame#execute()} method to invoke the remote operation. <p>
     * {@link
     * StartGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected StartGame() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.lisacampbell.backend.myApi.model.BooleanResponse.class);
    }

    @Override
    public StartGame setAlt(java.lang.String alt) {
      return (StartGame) super.setAlt(alt);
    }

    @Override
    public StartGame setFields(java.lang.String fields) {
      return (StartGame) super.setFields(fields);
    }

    @Override
    public StartGame setKey(java.lang.String key) {
      return (StartGame) super.setKey(key);
    }

    @Override
    public StartGame setOauthToken(java.lang.String oauthToken) {
      return (StartGame) super.setOauthToken(oauthToken);
    }

    @Override
    public StartGame setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (StartGame) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public StartGame setQuotaUser(java.lang.String quotaUser) {
      return (StartGame) super.setQuotaUser(quotaUser);
    }

    @Override
    public StartGame setUserIp(java.lang.String userIp) {
      return (StartGame) super.setUserIp(userIp);
    }

    @Override
    public StartGame set(String parameterName, Object value) {
      return (StartGame) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
